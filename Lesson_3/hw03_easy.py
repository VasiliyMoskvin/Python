__author__ = "Москвин Василий"


# Задание-1:
# Напишите функцию, округляющую полученное произвольное десятичное число
# до кол-ва знаков (кол-во знаков передается вторым аргументом)
# Округление должно происходить по математическим правилам (0.6 --> 1, 0.4 --> 0).
# Для решения задачи не используйте встроенные функции и функции из модуля math


def my_round(number, ndigits):
    list_number = str(number).split(".")
    list_number.extend(list(list_number.pop()))

    if len(list_number) == ndigits:
        return number
    elif len(list_number) > ndigits + 1:
        for i in range(-1, -(len(list_number) - ndigits), -1):
            if int(list_number[i]) >= 5:
                list_number[i - 1] = str(int(list_number[i - 1]) + 1)
        i = ndigits - 1
        while int(list_number[i]) == 10 and i > 0:
            list_number[i - 1] = str(int(list_number[ndigits - 1]) + 1)
            i -= 1
    else:
        while len(list_number) <= ndigits + 1:
            list_number.append("0")

    if ndigits == 0:
        return int(list_number[0])

    list_number[1] = "".join(list_number[1:ndigits + 1])
    return float(".".join(list_number[:2]))


my_round(2.123456, 5)

# Вопрос: правильно я оформил комментарий, согласно pep-8?
# комментарии к заданию 1
# def ...
#    перевожу число в строку и разбиваю его на целую и дробную части
#    ...
#
#    if ...: если количество знаков после запятой в числе совпадает с заданными, то
#    возвращаем введённое число
#    elif ...:  если количество знаков после запятой в числе больше заданного, то
#        for ...: проходим по одбрасываемому остатку и округляем его
#            if ...:
#                ...
#        ...
#        while ...: проходим по неоткидываемой части, и проверяме нет ли десяток
#            ...
#            ...
#    else: если количество знаков после запятой в числе меньше заданного, то добавляем нули в конец числа
#        while:
#            ... здесь можно вернуть число, как строку с нулями на конце
#
#    if ...: если округляем до целого числа, то возвращаем int
#       ...
#
#    ... собираем наш список обратно в число
#    ...

# Задание-2:
# Дан шестизначный номер билета. Определить, является ли билет счастливым.
# Решение реализовать в виде функции.
# Билет считается счастливым, если сумма его первых и последних цифр равны.
# !!!P.S.: функция не должна НИЧЕГО print'ить


def lucky_ticket(ticket_number):
   str_ticket = str(ticket_number) # перевожу число в строку и обрабатываю строку
   sum_1 = 0
   sum_2 = 0
   for i in range(0, len(str_ticket)//2): # прохожу по первой и второй половине билета
       sum_1 += int(str_ticket[i])
       sum_2 += int(str_ticket[-1-i])
   if sum_1 == sum_2:
       return True
   else:
       return False